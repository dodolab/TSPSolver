{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-74a92386c515f27c.js","src/index.ts","src/MapGrid.ts","src/Coord.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/MapTile.ts","src/MapExplorer.ts","src/Stack.ts","src/PathFinder.ts","src/PriorityQueue.ts","src/TSP.ts","src/Renderer.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import { MapGrid } from './MapGrid';\r\nimport { Coord, makeCoord, coordEq } from './Coord';\r\nimport { MapExplorer, ExploreEvent } from './MapExplorer';\r\nimport { PathFinder, PathFinderEvent } from './PathFinder';\r\nimport { TSP, TSPEvent } from './TSP';\r\nimport Renderer from './Renderer';\r\n\r\n\r\n// if bigger than 10x10, it will repeat the pattern from the map below\r\nlet WIDTH = 10;\r\nlet HEIGHT = 10;\r\n\r\nlet arr = [\r\n\t'.', 'o', '.', '.', 'o', 'x', '.', 'o', 'x', 'x',\r\n\t'.', '.', '.', '.', 'x', 'x', '.', '.', '.', '.',\r\n\t'.', 'x', 'x', '.', 'x', '.', '.', '.', '.', '.',\r\n\t'o', '.', 'x', 'x', '.', 'x', '.', '.', '.', '.',\r\n\t'.', '.', '.', 'x', 'o', '.', 'x', '.', '.', 'o',\r\n\t'.', '.', '.', 'x', '.', '.', '.', 'x', '.', '.',\r\n\t'.', '.', 'o', 'x', 'x', '.', '.', 'x', '.', '.',\r\n\t'.', '.', '.', '.', 'x', '.', 'x', 'x', '.', '.',\r\n\t'.', '.', '.', '.', '.', '.', '.', '.', '.', '.',\r\n\t'o', '.', '.', '.', 'x', '.', 'x', 'o', '.', '.',\r\n];\r\n\r\nconst realMap = new MapGrid(WIDTH, HEIGHT);\r\n\r\nfor (let i = 0; i < HEIGHT; i++) {\r\n\tfor (let j = 0; j < WIDTH; j++) {\r\n\t\t// repeat pattern from the map above\r\n\t\tswitch (arr[(10 * (i % 10)) + j % 10]) {\r\n\t\t\tcase '.':\r\n\t\t\t\trealMap.setTile(makeCoord(j, i), 'ROAD');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'x':\r\n\t\t\t\trealMap.setTile(makeCoord(j, i), 'WALL');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'o':\r\n\t\t\t\trealMap.setTile(makeCoord(j, i), 'CITY');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('Unknown map tile');\r\n\t\t}\r\n\t}\r\n}\r\nrealMap.generateNeighbors();\r\n\r\nconst getStartingCity = () => {\r\n\tconsole.log('Finding a starting city:');\r\n\tconst cities = realMap.mapArray.filter(a => a.type === 'CITY').length;\r\n\tconsole.log('Cities: ' + cities);\r\n\tconst randomLoc = Math.floor(cities / 2);\r\n\r\n\tlet cnt = 0;\r\n\tconst cityTile = realMap.mapArray.find((val) => val.type === 'CITY' && ++cnt === randomLoc);\r\n\treturn cityTile;\r\n}\r\n\r\nconst originalCoord = getStartingCity();\r\nconst explorer = new MapExplorer(WIDTH, HEIGHT);\r\nconst pathFinder = new PathFinder();\r\n\r\nconst canvas = document.getElementById('gameCanvas') as HTMLCanvasElement;\r\nconst ctx = canvas.getContext('2d');\r\n\r\nlet lastCoord: Coord = null;\r\n\r\nlet exploreGenerator: Generator<ExploreEvent, ExploreEvent, void> = null;\r\nlet dijkstraGenerator: Generator<PathFinderEvent, PathFinderEvent, void> = null;\r\n\r\nconst tsp = new TSP();\r\n\r\nlet tspGenerator: Generator<TSPEvent, TSPEvent, void> = null;\r\n\r\nlet state: 'EXPLORE' | 'DIJKSTRA' | 'TSP_PREPARE' | 'TSP' | 'TSP_WALKTHROUGH' = 'EXPLORE';\r\n\r\nlet distanceArray: number[] = null;\r\n\r\nlet currentTourIndex = 0;\r\n\r\nnew Renderer().init(canvas, () => {\r\n\r\n\tif (state === 'EXPLORE') {\r\n\t\tif (!exploreGenerator) {\r\n\t\t\texploreGenerator = explorer.exploreMapIteratively(originalCoord.coord, realMap);\r\n\t\t}\r\n\t\tconst status = exploreGenerator.next();\r\n\t\tif (!status.done && status.value) {\r\n\t\t\treturn {\r\n\t\t\t\tmap: explorer.blindMap,\r\n\t\t\t\thighlights: [explorer.current],\r\n\t\t\t\tbacktrace: explorer.backTrace,\r\n\t\t\t\tmilestones: explorer.checkpointStack.getNodes()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstate = 'DIJKSTRA';\r\n\t\t}\r\n\t}\r\n\r\n\tif (state === 'DIJKSTRA') {\r\n\t\tif (!dijkstraGenerator) {\r\n\t\t\tdijkstraGenerator = pathFinder.findPathIteratively(explorer.current, originalCoord.coord, realMap);\r\n\t\t}\r\n\t\tconst status = dijkstraGenerator.next();\r\n\t\tif (!status.done && status.value) {\r\n\t\t\treturn {\r\n\t\t\t\tmap: realMap,\r\n\t\t\t\thighlights: [status.value.currentCoord],\r\n\t\t\t\tbacktrace: pathFinder.backTrace,\r\n\t\t\t\tmilestones: pathFinder.queue.getNodes()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstate = 'TSP_PREPARE';\r\n\t\t}\r\n\t}\r\n\r\n\tif (state === 'TSP_PREPARE') {\r\n\t\tif(!distanceArray) {\r\n\t\t\tdistanceArray = [];\r\n\t\t}\r\n\t\t// now for the salesman problem:\r\n\t\t// 1) for each city, run dijkstra\r\n\t\tconst cities = realMap.mapArray.filter(a => a.type === 'CITY');\r\n\t\tconst refPoint = realMap.mapArray.find(a => a.type === 'ROAD');\r\n\t\tconst pathFinder = new PathFinder();\r\n\r\n\t\tlet cityIndex = 0;\r\n\t\tlet citiesCnt = cities.length;\r\n\r\n\t\tfor (let city of cities) {\r\n\t\t\tpathFinder.findPath(city.coord, refPoint.coord, realMap);\r\n\t\t\tconst minSteps = pathFinder.steps;\r\n\t\t\tlet city2Index = 0;\r\n\t\t\tfor (let city2 of cities) {\r\n\t\t\t\t// distance between CITY and CITY2\r\n\t\t\t\tconst distIndex = city2Index * citiesCnt + cityIndex;\r\n\t\t\t\tdistanceArray[distIndex] = minSteps[realMap.coordToIndex(city2.coord)];\r\n\t\t\t\tcity2Index++;\r\n\t\t\t}\r\n\t\t\tcityIndex++;\r\n\t\t}\r\n\t\tstate = 'TSP';\r\n\t}\r\n\r\n\tif (state === 'TSP') {\r\n\t\tconst cities = realMap.mapArray.filter(a => a.type === 'CITY');\r\n\t\t\r\n\t\tif (!tspGenerator) {\r\n\t\t\tconst cityWhereWeAre = cities.findIndex(c => coordEq(c.coord, originalCoord.coord));\r\n\t\t\ttspGenerator = tsp.solveIteratively(cityWhereWeAre, cities.length, distanceArray);\r\n\t\t}\r\n\r\n\t\tconst status = tspGenerator.next();\r\n\t\tif (!status.done && status.value) {\r\n\t\t\treturn {\r\n\t\t\t\tmap: realMap,\r\n\t\t\t\thighlights: [cities[status.value.currentCity].coord, cities[status.value.nextCity].coord],\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstate = 'TSP_WALKTHROUGH';\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tif(state === 'TSP_WALKTHROUGH') {\r\n\t\t\r\n\t}\r\n\r\n\treturn null;\r\n});\r\n\r\n\r\n\r\nconst initResizeHandler = () => {\r\n\tresizeHandler();\r\n\twindow.addEventListener('resize', resizeHandler);\r\n}\r\n\r\nconst resizeHandler = () => {\r\n\tif (window.innerWidth > window.innerHeight) {\r\n\t\tcanvas.height = window.innerHeight;\r\n\t\tcanvas.width = canvas.height * (HEIGHT / WIDTH);\r\n\t} else {\r\n\t\tcanvas.width = window.innerWidth;\r\n\t\tcanvas.height = canvas.width * (HEIGHT / WIDTH);\r\n\t}\r\n}\r\n\r\ninitResizeHandler();\r\n\r\n(function () {\r\n\tconst parent = document.querySelector('.range-slider');\r\n\r\n\tconst rangeS = parent.querySelectorAll('input[type=\"range\"]') as NodeListOf<HTMLInputElement>,\r\n\t\tnumberS = parent.querySelectorAll('input[type=\"number\"]') as NodeListOf<HTMLInputElement>;\r\n\r\n\trangeS.forEach((el: HTMLElement) => {\r\n\t\tel.oninput = () => {\r\n\t\t\tlet slide1 = parseFloat(rangeS[0].value),\r\n\t\t\t\tslide2 = parseFloat(rangeS[1].value);\r\n\r\n\t\t\tif (slide1 > slide2) {\r\n\t\t\t\t[slide1, slide2] = [slide2, slide1];\r\n\t\t\t}\r\n\r\n\t\t\tnumberS[0].value = `${slide1}`;\r\n\t\t\tnumberS[1].value = `${slide2}`;\r\n\t\t}\r\n\t});\r\n\r\n\tnumberS.forEach((el) => {\r\n\t\tel.oninput = () => {\r\n\t\t\tlet number1 = parseFloat(numberS[0].value),\r\n\t\t\t\tnumber2 = parseFloat(numberS[1].value);\r\n\r\n\t\t\tif (number1 > number2) {\r\n\t\t\t\tlet tmp = number1;\r\n\t\t\t\tnumberS[0].value = `${number2}`;\r\n\t\t\t\tnumberS[1].value = `${tmp}`;\r\n\t\t\t}\r\n\r\n\t\t\trangeS[0].value = `${number1}`;\r\n\t\t\trangeS[1].value = `${number2}`;\r\n\t\t}\r\n\t});\r\n})();\r\n\r\n// another ideas:\r\n// https://en.wikipedia.org/wiki/Flood_fill\r\n// https://gamedev.stackexchange.com/questions/55344/algorithm-for-exploring-filling-grid-map\r\n\r\n","import {\r\n\tCoord,\r\n\tmakeCoord,\r\n\tcoordLeft,\r\n\tcoordRight,\r\n\tcoordTop,\r\n\tcoordBottom,\r\n\tcoordTopLeft,\r\n\tcoordTopRight,\r\n\tcoordBottomLeft,\r\n\tcoordBottomRight\r\n} from './Coord';\r\nimport { MapTile, TileType } from './MapTile';\r\n\r\nexport type Neighbor = 'left' | 'right' | 'top' | 'bottom' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\r\n\r\n/**\r\n * 2D map structure\r\n */\r\nexport class MapGrid {\r\n\tmapArray: MapTile[] = [];\r\n\twidth: number;\r\n\theight: number;\r\n\tneighborsGenerated = false;\r\n\r\n\tconstructor(width: number, height: number) {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\tcoordToIndex = (coord: Coord): number => {\r\n\t\tconst { x, y } = coord;\r\n\t\tif (x < 0 || y < 0 || x >= this.width || y >= this.height) {\r\n\t\t\tthrow new Error(`Coordinate [${coord.x},${coord.y}] outside the boundaries!`);\r\n\t\t}\r\n\t\treturn y * this.width + x;\r\n\t}\r\n\r\n\tindexToCoord = (x: number): Coord => {\r\n\t\treturn makeCoord(x % this.width, Math.floor(x / this.width));\r\n\t}\r\n\r\n\tisInsideMap = (coord: Coord) => {\r\n\t\treturn coord.x >= 0 && coord.y >= 0 && coord.x < this.width && coord.y < this.height;\r\n\t}\r\n\r\n\tgetTile(coord: Coord) {\r\n\t\tif (!this.isInsideMap(coord)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.mapArray[this.coordToIndex(coord)];\r\n\t}\r\n\r\n\tsetTile(coord: Coord, type: TileType) {\r\n\t\tthis.mapArray[this.coordToIndex(coord)] = new MapTile(coord, type);\r\n\t}\r\n\r\n\tgenerateNeighbors() {\r\n\t\tfor (let tile of this.mapArray) {\r\n\t\t\t// this structure is not actually needed\r\n\t\t\ttile.neighbors = {\r\n\t\t\t\tleft: this.getTile(coordLeft(tile.coord)),\r\n\t\t\t\tright: this.getTile(coordRight(tile.coord)),\r\n\t\t\t\ttop: this.getTile(coordTop(tile.coord)),\r\n\t\t\t\tbottom: this.getTile(coordBottom(tile.coord)),\r\n\t\t\t\ttopLeft: this.getTile(coordTopLeft(tile.coord)),\r\n\t\t\t\ttopRight: this.getTile(coordTopRight(tile.coord)),\r\n\t\t\t\tbottomLeft: this.getTile(coordBottomLeft(tile.coord)),\r\n\t\t\t\tbottomRight: this.getTile(coordBottomRight(tile.coord)),\r\n\t\t\t}\r\n\t\t\t// this order is very important\r\n\t\t\ttile.directionalNeighbors = [tile.neighbors.top, tile.neighbors.left, tile.neighbors.bottom, tile.neighbors.right];\r\n\r\n\t\t\ttile.neighborsArr = [tile.neighbors.top, tile.neighbors.left, tile.neighbors.bottom, tile.neighbors.right,\r\n\t\t\ttile.neighbors.topLeft, tile.neighbors.topRight, tile.neighbors.bottomLeft, tile.neighbors.bottomRight]\r\n\t\t}\r\n\t\tthis.neighborsGenerated = true;\r\n\t}\r\n}","/**\r\n * 2D map Coordinate\r\n */\r\nexport type Coord = {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\n// helper for better readability\r\nexport const makeCoord = (x: number, y: number): Coord => {\r\n\treturn {\r\n\t\tx,\r\n\t\ty\r\n\t}\r\n}\r\n\r\nexport const coordEq = (a: Coord, b: Coord) => {\r\n\treturn a.x === b.x && a.y === b.y;\r\n}\r\n\r\nexport const coordLeft = (coord: Coord): Coord => {\r\n\treturn {\r\n\t\tx: coord.x - 1,\r\n\t\ty: coord.y\r\n\t}\r\n}\r\n\r\nexport const coordRight = (coord: Coord) => {\r\n\treturn {\r\n\t\tx: coord.x + 1,\r\n\t\ty: coord.y\r\n\t}\r\n}\r\n\r\nexport const coordTop = (coord: Coord) => {\r\n\treturn {\r\n\t\tx: coord.x,\r\n\t\ty: coord.y - 1\r\n\t}\r\n}\r\n\r\nexport const coordBottom = (coord: Coord) => {\r\n\treturn {\r\n\t\tx: coord.x,\r\n\t\ty: coord.y + 1\r\n\t}\r\n}\r\n\r\nexport const coordTopLeft = (coord: Coord) => {\r\n\treturn {\r\n\t\tx: coord.x - 1,\r\n\t\ty: coord.y - 1\r\n\t}\r\n}\r\n\r\nexport const coordTopRight = (coord: Coord) => {\r\n\treturn {\r\n\t\tx: coord.x + 1,\r\n\t\ty: coord.y - 1\r\n\t}\r\n}\r\n\r\nexport const coordBottomLeft = (coord: Coord) => {\r\n\treturn {\r\n\t\tx: coord.x - 1,\r\n\t\ty: coord.y + 1\r\n\t}\r\n}\r\n\r\nexport const coordBottomRight = (coord: Coord) => {\r\n\treturn {\r\n\t\tx: coord.x + 1,\r\n\t\ty: coord.y + 1\r\n\t}\r\n}\r\n\r\nexport const isDirectionalNeighbor = (a: Coord, b: Coord) => {\r\n\tconst distX = Math.abs(a.x - b.x);\r\n\tconst distY = Math.abs(a.y - b.y);\r\n\treturn distX <= 1 && distY <= 1 && distX !== distY;\r\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { Coord } from './Coord';\r\nimport { Neighbor } from './MapGrid';\r\n\r\nexport type TileType = 'UNKNOWN' | 'ROAD' | 'WALL' | 'CITY';\r\n\r\n/**\r\n * Structure for map tiles, keeping references to all neighbours\r\n */\r\nexport class MapTile {\r\n\tneighbors: Record<Neighbor, MapTile>;\r\n\tneighborsArr: MapTile[];\r\n\tdirectionalNeighbors: [MapTile, MapTile, MapTile, MapTile];\r\n\tcoord: Coord;\r\n\ttype: TileType;\r\n\r\n\tconstructor(coord: Coord, type: TileType) {\r\n\t\tthis.coord = coord;\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\tget isWalkable() {\r\n\t\treturn this.type === 'ROAD' || this.type === 'CITY';\r\n\t}\r\n}","import { Coord, makeCoord, coordEq, isDirectionalNeighbor } from './Coord';\r\nimport { MapGrid } from './MapGrid';\r\nimport { Stack } from './Stack';\r\nimport { TileType, MapTile } from './MapTile';\r\n\r\nexport type ExploreEvent = {\r\n\ttype: 'GOTO' | 'EXPLORE';\r\n\ttile: MapTile;\r\n}\r\n\r\nexport class MapExplorer {\r\n\t// current position\r\n\tcurrent: Coord;\r\n\t// blind map that gets gradually explored\r\n\tblindMap: MapGrid;\r\n\t// helping structure for backtracing to the previous milestone on the stack\r\n\tbackTrace: Map<number, number>;\r\n\t// stack of checkpoints\r\n\tcheckpointStack: Stack<Coord>;\r\n\tvisitedNodes: Set<number>;\r\n\texploredNodes: Set<number>;\r\n\r\n\tconstructor(width: number, height: number) {\r\n\t\tthis.blindMap = new MapGrid(width, height);\r\n\t\tfor (let i = 0; i < width; i++) {\r\n\t\t\tfor (let j = 0; j < height; j++) {\r\n\t\t\t\tthis.blindMap.setTile(makeCoord(i, j), 'UNKNOWN');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texploreMap(startCoord: Coord, map: MapGrid): MapGrid {\r\n\t\tconst generator = this.exploreMapIteratively(startCoord, map);\r\n\t\tlet val = generator.next();\r\n\t\twhile (!val.done) {\r\n\t\t\tval = generator.next();\r\n\t\t}\r\n\t\t// return explored map\r\n\t\treturn this.blindMap;\r\n\t}\r\n\r\n\t*exploreMapIteratively(startCoord: Coord, map: MapGrid): Generator<ExploreEvent, ExploreEvent, void> {\r\n\t\tthis.reset();\r\n\t\tthis.current = startCoord;\r\n\r\n\t\t// visit the starting node\r\n\t\tthis.exploreTile(startCoord, map.getTile(startCoord).type);\r\n\t\tthis.visitNewNode(startCoord);\r\n\t\tthis.checkpointStack.push(this.current);\r\n\r\n\t\t// we go forward and when we need to go back, we will use the stack\r\n\t\tlet canWalkForward = false;\r\n\r\n\t\twhile (!this.checkpointStack.isEmpty() || canWalkForward) {\r\n\r\n\t\t\tif (!canWalkForward) {\r\n\t\t\t\tlet lastCheckpoint = this.checkpointStack.pop();\r\n\r\n\t\t\t\t// a little twist -> this will ignore milestones around which all cells have already been discovered\r\n\t\t\t\twhile (!map.getTile(lastCheckpoint).directionalNeighbors\r\n\t\t\t\t\t.find(neigh => neigh && neigh.isWalkable && !this.isVisited(neigh.coord))) {\r\n\r\n\t\t\t\t\tif (this.checkpointStack.isEmpty()) {\r\n\t\t\t\t\t\t// algorithm termination\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastCheckpoint = this.checkpointStack.pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pathToLastCheckpoint = this.addToBackTrace(lastCheckpoint);\r\n\r\n\t\t\t\t//walk to the last checkpoint\r\n\t\t\t\tfor (let coord of pathToLastCheckpoint) {\r\n\t\t\t\t\tthis.current = coord;\r\n\t\t\t\t\tyield {\r\n\t\t\t\t\t\ttype: 'GOTO',\r\n\t\t\t\t\t\ttile: map.getTile(coord)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet currentTile = map.getTile(this.current);\r\n\t\t\t// this order is important!\r\n\t\t\tconst neighbors = currentTile.neighborsArr;\r\n\r\n\t\t\tlet neighbourToWalk: Coord = null;\r\n\t\t\tlet neighboursToWalkCnt = 0;\r\n\r\n\t\t\tfor (let neigh of neighbors) {\r\n\t\t\t\t// if we are close to map boundaries, some neighbours can be undefined \r\n\t\t\t\tif (neigh) {\r\n\t\t\t\t\tif (!this.isExplored(neigh.coord)) {\r\n\t\t\t\t\t\tthis.exploreTile(neigh.coord, neigh.type);\r\n\t\t\t\t\t\tyield {\r\n\t\t\t\t\t\t\ttype: 'EXPLORE',\r\n\t\t\t\t\t\t\ttile: neigh\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (neigh.isWalkable && isDirectionalNeighbor(neigh.coord, this.current) && !this.isVisited(neigh.coord)) {\r\n\t\t\t\t\t\tneighbourToWalk = neigh.coord;\r\n\t\t\t\t\t\tneighboursToWalkCnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (neighboursToWalkCnt > 1) {\r\n\t\t\t\t// more than one neighbour -> we need to save a checkpoint\r\n\t\t\t\t// for backtracking\r\n\t\t\t\tthis.checkpointStack.push(this.current);\r\n\t\t\t}\r\n\r\n\t\t\tif (neighbourToWalk) {\r\n\t\t\t\tcanWalkForward = true;\r\n\t\t\t\tthis.visitNewNode(neighbourToWalk);\r\n\t\t\t\tyield {\r\n\t\t\t\t\ttype: 'GOTO',\r\n\t\t\t\t\ttile: map.getTile(neighbourToWalk)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcanWalkForward = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// generate neighbours as we have already discovered all cells\r\n\t\tthis.blindMap.generateNeighbors();\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate addToBackTrace(target: Coord): Coord[] {\r\n\r\n\t\tif (coordEq(target, this.current)) {\r\n\t\t\t// trivial solution -> staying on the same place\r\n\t\t\treturn [target];\r\n\t\t}\r\n\r\n\t\tif (this.blindMap.getTile(target).type === 'UNKNOWN') {\r\n\t\t\tthrow new Error(`Can\\'t walk to an unknown area: [${target.x},${target.y}]`);\r\n\t\t}\r\n\r\n\t\tif (isDirectionalNeighbor(target, this.current)) {\r\n\t\t\t// semi-trivial solution - going one cell back\r\n\t\t\treturn [target];\r\n\t\t} else {\r\n\t\t\t// iterative backtracking\r\n\t\t\tconst path = [];\r\n\t\t\tlet nextStep = this.backTrace.get(this.coordToIndex(this.current));\r\n\t\t\tconst toIndex = this.coordToIndex(target);\r\n\r\n\t\t\tlet overFlowCheck = 0;\r\n\t\t\twhile (true) {\r\n\t\t\t\tpath.push(this.indexToCoord(nextStep));\r\n\t\t\t\tif (nextStep === toIndex) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tnextStep = this.backTrace.get(nextStep);\r\n\r\n\t\t\t\tif(overFlowCheck++ >= this.blindMap.width * this.blindMap.height) {\r\n\t\t\t\t\tthrow new Error(`Backtrace got in an infinite loop for [${target.x},${target.y}]`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn path;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate coordToIndex = (coord: Coord): number => this.blindMap.coordToIndex(coord);\r\n\tprivate indexToCoord = (index: number): Coord => this.blindMap.indexToCoord(index);\r\n\r\n\tprivate reset() {\r\n\t\tthis.backTrace = new Map();;\r\n\t\tthis.visitedNodes = new Set();\r\n\t\tthis.exploredNodes = new Set();\r\n\t\tthis.blindMap.generateNeighbors();\r\n\t\tthis.checkpointStack = new Stack<Coord>();\r\n\t}\r\n\r\n\tprivate isVisited(coord: Coord) {\r\n\t\treturn this.visitedNodes.has(this.coordToIndex(coord));\r\n\t}\r\n\r\n\tprivate visitNewNode(coord: Coord) {\r\n\t\tthis.visitedNodes.add(this.coordToIndex(coord));\r\n\t\tif (!coordEq(this.current, coord)) {\r\n\t\t\t// update backtrack\r\n\t\t\tthis.backTrace.set(this.coordToIndex(coord), this.coordToIndex(this.current));\r\n\t\t}\r\n\t\tthis.current = coord;\r\n\t}\r\n\r\n\tprivate isExplored(coord: Coord) {\r\n\t\treturn this.exploredNodes.has(this.coordToIndex(coord));\r\n\t}\r\n\r\n\tprivate exploreTile(coord: Coord, type: TileType) {\r\n\t\tthis.blindMap.setTile(coord, type);\r\n\t\tthis.exploredNodes.add(this.coordToIndex(coord));\r\n\t}\r\n}","type StackNode<T> = {\r\n\tnode: T;\r\n\tnext: StackNode<T>;\r\n}\r\n\r\n/**\r\n * Generic stack that implements FIFO behavior\r\n */\r\nexport class Stack<T> {\r\n\troot: StackNode<T>;\r\n\r\n\tpush(node: T) {\r\n\t\tif (!this.root) {\r\n\t\t\tthis.root = {\r\n\t\t\t\tnode,\r\n\t\t\t\tnext: null,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.root = {\r\n\t\t\t\tnode,\r\n\t\t\t\tnext: this.root\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpop() {\r\n\t\tconst top = this.root.node;\r\n\t\tthis.root = {\r\n\t\t\tnode: this.root?.next?.node,\r\n\t\t\tnext: this.root?.next?.next\r\n\t\t}\r\n\t\treturn top;\r\n\t}\r\n\r\n\ttop() {\r\n\t\treturn this.root?.node;\r\n\t}\r\n\r\n\tgetNodes(): T[] {\r\n\t\tconst output: T[] = [];\r\n\t\tlet node = this.root;\r\n\t\twhile (node && node.node) {\r\n\t\t\toutput.push(node.node);\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn !this.root || !this.root.node;\r\n\t}\r\n}","import { Coord } from './Coord';\r\nimport { MapGrid } from './MapGrid';\r\nimport { PriorityQueue } from './PriorityQueue';\r\n\r\nexport type PathFinderEvent = {\r\n\tcurrentCoord: Coord;\r\n}\r\n\r\n/**\r\n * Dijkstra algorithm that uses priority queue to find the shortest\r\n * path from start node to all other nodes\r\n */\r\nexport class PathFinder {\r\n\r\n\t// stores min amount of steps (min price) from start to each other node)\r\n\tsteps: Map<number, number>;\r\n\t// helper for backtracing to the start (used when generating the path)\r\n\tbackTrace: Map<number, number>;\r\n\tqueue: PriorityQueue<Coord>;\r\n\tclosestPath: Coord[];\r\n\r\n\r\n\tfindPath(start: Coord, end: Coord, map: MapGrid): Coord[] {\r\n\t\tconst generator = this.findPathIteratively(start, end, map);\r\n\t\tlet val = generator.next();\r\n\t\twhile (!val.done) {\r\n\t\t\tval = generator.next();\r\n\t\t}\r\n\t\treturn this.closestPath;\r\n\t}\r\n\r\n\t*findPathIteratively(start: Coord, end: Coord, map: MapGrid): Generator<PathFinderEvent, PathFinderEvent, void> {\r\n\t\tthis.reset();\r\n\r\n\t\tconst startIndex = map.coordToIndex(start);\r\n\t\tconst endIndex = map.coordToIndex(end);\r\n\r\n\t\t// steps to all nodes are initialized to infinity, except the starting node\r\n\t\tfor(let i = 0; i < (map.width * map.height); i++) {\r\n\t\t\tthis.steps.set(i, Infinity);\r\n\t\t}\r\n\t\tthis.steps.set(startIndex, 0);\r\n\t\tthis.queue.enqueue(start, 0);\r\n\r\n\t\twhile (!this.queue.isEmpty) {\r\n\t\t\tlet currentCoord = this.queue.dequeue();\r\n\t\t\tyield {\r\n\t\t\t\tcurrentCoord\r\n\t\t\t};\r\n\r\n\t\t\tlet currentIndex = map.coordToIndex(currentCoord);\r\n\t\t\tlet currentPrice = this.steps.get(currentIndex);\r\n\t\t\t// explore all neighbors and ignore diagonals\r\n\t\t\tconst neighbors = map.getTile(currentCoord).directionalNeighbors;\r\n\t\t\tneighbors.forEach((neigh) => {\r\n\t\t\t\tif (neigh && neigh.isWalkable) {\r\n\t\t\t\t\tconst neighbourIndex = map.coordToIndex(neigh.coord);\r\n\t\t\t\t\tlet price = currentPrice + 1;\r\n\t\t\t\t\tif (price < this.steps.get(neighbourIndex)) {\r\n\t\t\t\t\t\t// we found a better path -> store the backtrace\r\n\t\t\t\t\t\tthis.steps.set(neighbourIndex, price);\r\n\t\t\t\t\t\tthis.backTrace.set(neighbourIndex, currentIndex);\r\n\t\t\t\t\t\tthis.queue.enqueue(neigh.coord, price);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// backtrack and fill the output path\r\n\t\tthis.closestPath.push(end);\r\n\t\tlet currentStep = endIndex;\r\n\r\n\t\twhile (currentStep && currentStep !== startIndex) {\r\n\t\t\tconst nextStep = this.backTrace.get(currentStep);\r\n\t\t\tthis.closestPath.push(map.indexToCoord(nextStep))\r\n\t\t\tcurrentStep = nextStep;\r\n\t\t}\r\n\t\tthis.closestPath.reverse();\r\n\t\treturn null;\r\n0\t}\r\n\r\n\tprivate reset() {\r\n\t\tthis.steps = new Map();\r\n\t\tthis.backTrace = new Map();\r\n\t\tthis.queue = new PriorityQueue<Coord>();\r\n\t\tthis.closestPath = [];\r\n\t}\r\n}","/**\r\n * Priority queue that stores generic nodes and their priorities\r\n */;\r\nexport class PriorityQueue<T> {\r\n\tcollection: [T, number] [] = [];\r\n\r\n\tenqueue(element: T, priority: number = 0) {\r\n\t\tif (this.isEmpty) {\r\n\t\t\tthis.collection.push([element, priority]);\r\n\t\t} else {\r\n\t\t\tlet added = false;\r\n\t\t\tfor (let i = 1; i <= this.collection.length; i++) {\r\n\t\t\t\tif (priority < this.collection[i - 1][1]) {\r\n\t\t\t\t\tthis.collection.splice(i - 1, 0, [element, priority]);\r\n\t\t\t\t\tadded = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!added) {\r\n\t\t\t\tthis.collection.push([element, priority]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetNodes(): T[] {\r\n\t\treturn this.collection.map(c => c[0]);\r\n\t}\r\n\r\n\tdequeue(): T {\r\n\t\tlet value = this.collection.shift();\r\n\t\treturn value[0];\r\n\t}\r\n\r\n\tget isEmpty() {\r\n\t\treturn (this.collection.length === 0)\r\n\t}\r\n}","import { Coord, makeCoord } from './Coord';\r\n\r\n// https://www.interviewbit.com/blog/travelling-salesman-problem/\r\n\r\nexport type TSPEvent = {\r\n\tcurrentCity: number;\r\n\tnextCity: number;\r\n}\r\n\r\n/**\r\n * Travelling Salesman Problem Solver\r\n * Since this is a NP problem solver, it uses Dynamic Programming and a bit array\r\n * The maximum number of cities is the number of bits in JS Number type = 64\r\n * \r\n * Distance array example (the array doesn't need to be symmetric):\r\n * \r\n *         London    Paris    Prague\r\n * London    0        342      1267\r\n * Paris    342        0       1032\r\n * Prague   1267      1032       0\r\n * \r\n */\r\nexport class TSP {\r\n\tstartCityIndex = 0;\r\n\t// a symmetric 2D array of city-city min distances\r\n\tdistances: number[] = [];\r\n\t// found tour when the algorithm ends\r\n\ttour: number[];\r\n\tminTourCost: number;\r\n\tcitiesNum: number;\r\n\t// sparse 2D array for memoizing permutations for each city\r\n\tmemoizer: number[][];\r\n\r\n\tsolve(startCityIndex: number, citiesNum: number, distances: number[]) {\r\n\t\tconst generator = this.solveIteratively(startCityIndex, citiesNum, distances);\r\n\t\tlet val = generator.next();\r\n\t\twhile (!val.done) {\r\n\t\t\tval = generator.next();\r\n\t\t}\r\n\t\treturn this.tour; \r\n\t}\r\n\r\n\t*solveIteratively(startCityIndex: number, citiesNum: number, distances: number[]): Generator<TSPEvent, TSPEvent, void> {\r\n\t\tthis.distances = distances;\r\n\t\tthis.citiesNum = citiesNum;\r\n\t\tthis.startCityIndex = startCityIndex;\r\n\t\tthis.reset(citiesNum);\r\n\r\n\t\t// add all outgoing edges from the starting node to memo table.\r\n\t\tfor (let cityIndex = 0; cityIndex < this.citiesNum; cityIndex++) {\r\n\t\t\tif (cityIndex == this.startCityIndex) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// permutation with the start city and all neighbours as the second city\r\n\t\t\tconst permutation = (1 << cityIndex) | (1 << this.startCityIndex);\r\n\t\t\tthis.memoize(cityIndex, permutation, this.distances[this.coordToIndex(this.startCityIndex, cityIndex)]);\r\n\t\t}\r\n\r\n\t\t// 1st loop: starting from the 3rd city, as the 2nd is already memoized\r\n\t\tfor (let cityIndex = 3; cityIndex <= this.citiesNum; cityIndex++) {\r\n\t\t\tconst permutations = this.generatePermutations(cityIndex);\r\n\t\t\t// 2nd loop: go over each permutation for this city and memoize the promising ones\r\n\t\t\tfor (let permutation of permutations) {\r\n\t\t\t\tif (this.notIn(this.startCityIndex, permutation)) {\r\n\t\t\t\t\t// invalid permutation\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// 3rd loop: find the promising next city\r\n\t\t\t\tfor (let nextCityIndex = 0; nextCityIndex < this.citiesNum; nextCityIndex++) {\r\n\t\t\t\t\tif (nextCityIndex == this.startCityIndex || this.notIn(nextCityIndex, permutation)) {\r\n\t\t\t\t\t\t// invalid permutation\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// report to the observers\r\n\t\t\t\t\tyield {\r\n\t\t\t\t\t\tcurrentCity: cityIndex,\r\n\t\t\t\t\t\tnextCity: nextCityIndex,\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet permutationWithoutNextCity = permutation ^ (1 << nextCityIndex);\r\n\t\t\t\t\tlet minDist = Infinity;\r\n\t\t\t\t\t// 4th loop: find the min distance from permutations that don't include the next city\r\n\t\t\t\t\t// and add the min distance to the next city\r\n\t\t\t\t\tfor (let endCityIndex = 0; endCityIndex < this.citiesNum; endCityIndex++) {\r\n\t\t\t\t\t\tif (endCityIndex == this.startCityIndex || endCityIndex == nextCityIndex || this.notIn(endCityIndex, permutation)) {\r\n\t\t\t\t\t\t\t// invalid permutation\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet newDistance = this.getMemoized(endCityIndex, permutationWithoutNextCity) \r\n\t\t\t\t\t\t\t+ this.distances[this.coordToIndex(endCityIndex, nextCityIndex)];\r\n\t\t\t\t\t\tminDist = Math.min(minDist, newDistance);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.memoize(nextCityIndex, permutation, minDist);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ending subset -> all bits are set to 1 \r\n\t\tconst END_STATE = (1 << this.citiesNum) - 1;\r\n\r\n\t\t// backtrack the output tour  and minimize cost.\r\n\t\tfor (let i = 0; i < this.citiesNum; i++) {\r\n\t\t\tif (i == this.startCityIndex) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet tourCost = this.getMemoized(i, END_STATE) + this.distances[this.coordToIndex(i, this.startCityIndex)];\r\n\t\t\tif (tourCost < this.minTourCost) {\r\n\t\t\t\tthis.minTourCost = tourCost;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet lastIndex = this.startCityIndex;\r\n\t\tlet state = END_STATE;\r\n\t\tthis.tour.push(this.startCityIndex);\r\n\r\n\t\t// reconstruct TSP path from the memorizer table.\r\n\t\tfor (let i = 1; i < this.citiesNum; i++) {\r\n\t\t\tlet index = -1;\r\n\t\t\tfor (let j = 0; j < this.citiesNum; j++) {\r\n\t\t\t\tif (j == this.startCityIndex || this.notIn(j, state)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (index == -1) {\r\n\t\t\t\t\t// first valid index of the second loop\r\n\t\t\t\t\tindex = j;\r\n\t\t\t\t}\r\n\t\t\t\tlet prevDist = this.getMemoized(index, state) + this.distances[this.coordToIndex(index, lastIndex)];\r\n\t\t\t\tlet newDist = this.getMemoized(j, state) + this.distances[this.coordToIndex(j, lastIndex)];\r\n\t\t\t\tif (newDist < prevDist) {\r\n\t\t\t\t\tindex = j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.tour.push(index);\r\n\t\t\tstate = state ^ (1 << index);\r\n\t\t\tlastIndex = index;\r\n\t\t}\r\n\r\n\t\tthis.tour.push(this.startCityIndex);\r\n\t\tthis.tour.reverse();\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate generatePermutations(cityIndex: number) {\r\n\t\tconst permutations: number[] = [];\r\n\t\tthis.generatePermutationsRec(0, 0, this.citiesNum, cityIndex, permutations);\r\n\t\treturn permutations;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates all bit sets where r bits are set to one. Returns a list of integer masks\r\n\t * We start with \"r\" elements and recurse down until r = 0 \r\n\t * @param set - bit mask to which the permutations are generated\r\n\t * @param from - first bit from which the permutations are generated\r\n\t * @param to - last bit from which the permutations are generated\r\n\t * @param r - the number of \"bits\" to select. If r == (to - from),  we get a full permutation\r\n\t * @param permutations output array of integer masks\r\n\t */\r\n\tprivate generatePermutationsRec(set: number, from: number, to: number, r: number, permutations: number[]) {\r\n\r\n\t\t// return early if there are more elements left to select than what is available\r\n\t\tif ((to - from) < r) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// We selected 'r' elements so we found a valid subset!\r\n\t\tif (r == 0) {\r\n\t\t\tpermutations.push(set);\r\n\t\t} else {\r\n\t\t\tfor (let i = from; i < to; i++) {\r\n\t\t\t\t// try to include this bit\r\n\t\t\t\tset |= 1 << i;\r\n\t\t\t\t// generate other bits when bit i is 1\r\n\t\t\t\tthis.generatePermutationsRec(set, i + 1, to, r - 1, permutations);\r\n\t\t\t\t// revert back and go to the next instance where we did not include this element\r\n\t\t\t\tset &= ~(1 << i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate reset(citiesNum: number) {\r\n\t\tthis.memoizer = [];\r\n\t\tthis.tour = [];\r\n\t\tthis.minTourCost = Infinity;\r\n\r\n\t\t// init 2D array\r\n\t\tfor(let i = 0; i < citiesNum; i++) {\r\n\t\t\tthis.memoizer[i] = [];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate memoize(cityIndex: number, permutation: number, distance: number) {\r\n\t\tthis.memoizer[cityIndex][permutation] = distance;\r\n\t}\r\n\r\n\tprivate getMemoized(cityIndex: number, permutation: number) {\r\n\t\treturn this.memoizer[cityIndex][permutation];\r\n\t}\r\n\r\n\t/**\r\n \t* Returns true if the bits of element are inside the bits of the subset param\r\n \t*/\r\n\tprivate notIn(elem: number, subset: number) {\r\n\t\treturn ((1 << elem) & subset) == 0;\r\n\t}\r\n\r\n\tprivate coordToIndex = (x: number, y: number): number => {\r\n\t\tif (x < 0 || y < 0 || x >= this.citiesNum || y >= this.citiesNum) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn y * this.citiesNum + x;\r\n\t}\r\n}","import { MapGrid } from './MapGrid';\r\nimport { Coord, makeCoord, coordEq } from './Coord';\r\n\r\nexport type RendererData = {\r\n\tmap: MapGrid;\r\n\thighlights: Coord[];\r\n\tbacktrace?: Map<number, number>;\r\n\tmilestones?: Coord[];\r\n}\r\n\r\nexport default class Renderer {\r\n\tlastFrameTime = 0;\r\n\tlastTickTime = 0;\r\n\ttime = 0;\r\n\tcanvas: HTMLCanvasElement;\r\n\tctx: CanvasRenderingContext2D;\r\n\tspeed: number = 0.5;\r\n\ttickHandler: () => RendererData;\r\n\r\n\tinit(canvas: HTMLCanvasElement, tickHandler: () => RendererData) {\r\n\t\tthis.canvas = canvas;\r\n\t\tthis.tickHandler = tickHandler;\r\n\t\tthis.ctx = canvas.getContext('2d');\r\n\t\tthis.loop(performance.now());\r\n\t}\r\n\r\n\r\n\tprivate loop(time: number) {\r\n\t\tconst delta = (time - this.lastFrameTime);\r\n\t\tthis.lastFrameTime = time;\r\n\t\tthis.time += delta;\r\n\r\n\t\t// for a lower speed, not each loop will make a tick\r\n\t\t// for a higher speed, each loop can make more ticks\r\n\t\tconst iterations = Math.floor(this.speed * (this.lastFrameTime - this.lastTickTime) / 16);\r\n\r\n\t\tfor (let i = 0; i < iterations; i++) {\r\n\t\t\tconst data = this.tickHandler();\r\n\t\t\tthis.renderData(data);\r\n\t\t\tthis.lastTickTime = this.lastFrameTime;\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame((time) => this.loop(time));\r\n\t}\r\n\r\n\tprivate renderData(data: RendererData) {\r\n\t\tif (!data) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst blockSize = this.canvas.width / data.map.width;\r\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\tfor (let i = 0; i < data.map.width; i++) {\r\n\t\t\tfor (let j = 0; j < data.map.height; j++) {\r\n\t\t\t\tconst coord = makeCoord(i, j);\r\n\t\t\t\tconst tile = data.map.getTile(coord);\r\n\t\t\t\tswitch (tile.type) {\r\n\t\t\t\t\tcase 'UNKNOWN':\r\n\t\t\t\t\t\tthis.ctx.fillStyle = '#11111155';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'ROAD':\r\n\t\t\t\t\t\tthis.ctx.fillStyle = '#22992255';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'WALL':\r\n\t\t\t\t\t\tthis.ctx.fillStyle = '#55555555';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'CITY':\r\n\t\t\t\t\t\tthis.ctx.fillStyle = '#CD444455';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.ctx.fillRect(i * blockSize, j * blockSize, blockSize - 1, blockSize - 1);\r\n\r\n\t\t\t\tif (data.map.width < 30) {\r\n\t\t\t\t\tthis.ctx.font = `${blockSize * 0.25}px courier new`;\r\n\t\t\t\t\tthis.ctx.fillStyle = '#FFFFFF';\r\n\t\t\t\t\tthis.ctx.fillText(`[${i},${j}]`, i * blockSize + blockSize * 0.10, j * blockSize + blockSize * 0.55);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(data.highlights) {\r\n\t\t\tthis.ctx.fillStyle = '#EFEFEF';\r\n\t\t\tfor(let highlight of data.highlights) {\r\n\t\t\t\tthis.ctx.fillRect(highlight.x * blockSize, highlight.y * blockSize, blockSize - 1, blockSize - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data.backtrace) {\r\n\t\t\tfor (let index of data.backtrace.keys()) {\r\n\t\t\t\tconst fromCoord = data.map.indexToCoord(index);\r\n\t\t\t\tconst toCoord = data.map.indexToCoord(data.backtrace.get(index));\r\n\r\n\t\t\t\tconst isLeft = toCoord.x === fromCoord.x - 1;\r\n\t\t\t\tconst isRight = toCoord.x === fromCoord.x + 1;\r\n\t\t\t\tconst isTop = toCoord.y === fromCoord.y - 1;\r\n\t\t\t\tconst isBottom = toCoord.y === fromCoord.y + 1;\r\n\t\t\t\tthis.ctx.fillStyle = '#FFFF00';\r\n\t\t\t\tconst symbol = isLeft ? '←' : isRight ? '→' : isTop ? '↑' : '↓';\r\n\t\t\t\tthis.ctx.font = `${blockSize * 0.5}px courier new`;\r\n\t\t\t\tthis.ctx.fillText(symbol, fromCoord.x * blockSize + blockSize * 0.35, fromCoord.y * blockSize + blockSize * 0.85);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data.milestones) {\r\n\t\t\tfor (let milestone of data.milestones) {\r\n\t\t\t\tthis.ctx.fillStyle = '#ADADAD';\r\n\t\t\t\tthis.ctx.fillRect(milestone.x * blockSize, milestone.y * blockSize, blockSize * 0.15, blockSize * 0.15);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}"],"names":[],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}